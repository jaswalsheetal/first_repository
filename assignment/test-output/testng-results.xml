<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="148" started-at="2020-06-26T14:00:50Z" finished-at="2020-06-26T14:00:50Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="148" started-at="2020-06-26T14:00:50Z" finished-at="2020-06-26T14:00:50Z">
      <class name="flip.scrollTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:flip.scrollTest@396a51ab]" name="beforeSuite" is-config="true" duration-ms="15" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="beforeTest()[pri:0, instance:flip.scrollTest@396a51ab]" name="beforeTest" is-config="true" duration-ms="87" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\automation_1june\assignment\driver.chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\automation_1june\assignment\driver.chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at flip.scrollTest.beforeTest(scrollTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:146)
	at org.testng.TestRunner.beforeRun(TestRunner.java:658)
	at org.testng.TestRunner.run(TestRunner.java:626)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:flip.scrollTest@396a51ab]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:flip.scrollTest@396a51ab]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="f()[pri:0, instance:flip.scrollTest@396a51ab]" name="f" duration-ms="0" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\automation_1june\assignment\driver.chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\automation_1june\assignment\driver.chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at flip.scrollTest.beforeTest(scrollTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:146)
	at org.testng.TestRunner.beforeRun(TestRunner.java:658)
	at org.testng.TestRunner.run(TestRunner.java:626)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:flip.scrollTest@396a51ab]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:flip.scrollTest@396a51ab]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:flip.scrollTest@396a51ab]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-06-26T19:30:50Z" finished-at="2020-06-26T19:30:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:flip.scrollTest@396a51ab]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-06-26T19:30:51Z" finished-at="2020-06-26T19:30:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- flip.scrollTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
